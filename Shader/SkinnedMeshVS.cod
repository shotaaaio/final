//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 material_color;             // Offset:   64 Size:    16
//   row_major float4x4 bone_transforms[256];// Offset:   80 Size: 16384
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64
//   float4 light_direction;            // Offset:   64 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// OBJECT_CONSTANT_BUFFER            cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float       
// TEXCOORD                 0   xy          3     NONE   float   xy  
// WEIGHTS                  0   xyzw        4     NONE   float   xyzw
// BONES                    0   xyzw        5     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { -1, 0, 0, 0},
                              { 0, -1, 0, 0},
                              { 0, 0, -1, 0},
                              { 0, 0, 0, -1} }
dcl_constantbuffer CB0[1029], dynamicIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v3.xy
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; v0.w <- vin.position.w; 
//   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; v1.w <- vin.normal.w; 
//   v2.x <- vin.tangent.x; v2.y <- vin.tangent.y; v2.z <- vin.tangent.z; v2.w <- vin.tangent.w; 
//   v3.x <- vin.texcoord.x; v3.y <- vin.texcoord.y; 
//   v4.x <- vin.bone_weights.x; v4.y <- vin.bone_weights.y; v4.z <- vin.bone_weights.z; v4.w <- vin.bone_weights.w; 
//   v5.x <- vin.bone_indices.x; v5.y <- vin.bone_indices.y; v5.z <- vin.bone_indices.z; v5.w <- vin.bone_indices.w; 
//   o3.x <- <main return value>.color.x; o3.y <- <main return value>.color.y; o3.z <- <main return value>.color.z; o3.w <- <main return value>.color.w; 
//   o2.x <- <main return value>.world_normal.x; o2.y <- <main return value>.world_normal.y; o2.z <- <main return value>.world_normal.z; o2.w <- <main return value>.world_normal.w; 
//   o1.x <- <main return value>.texcoord.x; o1.y <- <main return value>.texcoord.y; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 4 "C:\Users\2230023\OneDrive - yamaguchigakuen\チEクトップ\final\HLSL\SkinnedMeshVS.hlsl"
itof r0.x, l(0)  // r0.x <- vin.normal.w

#line 6
itof r0.yzw, l(0, 0, 0, 0)  // r0.y <- blended_position.x; r0.z <- blended_position.y; r0.w <- blended_position.z

#line 7
itof r1.xyz, l(0, 0, 0, 0)  // r1.x <- blended_normal.x; r1.y <- blended_normal.y; r1.z <- blended_normal.z

#line 8
mov r1.w, l(0)  // r1.w <- bone_index
mov r2.xyz, r0.yzwy  // r2.x <- blended_position.x; r2.y <- blended_position.y; r2.z <- blended_position.z
mov r3.xyz, r1.xyzx  // r3.x <- blended_normal.x; r3.y <- blended_normal.y; r3.z <- blended_normal.z
mov r2.w, r1.w  // r2.w <- bone_index
loop 
  ilt r3.w, r2.w, l(4)
  breakc_z r3.w

#line 10
  dp4 r3.w, v4.xyzw, icb[r2.w + 0].xyzw
  and r4.xyzw, v5.xyzw, icb[r2.w + 4].xyzw
  or r4.xy, r4.ywyy, r4.xzxx
  or r4.x, r4.y, r4.x
  imul null, r4.x, r4.x, l(4)
  mul r4.yzw, v0.xxxx, cb0[r4.x + 5].xxyz
  mul r5.xyz, v0.yyyy, cb0[r4.x + 6].xyzx
  add r4.yzw, r4.yyzw, r5.xxyz
  mul r5.xyz, v0.zzzz, cb0[r4.x + 7].xyzx
  add r4.yzw, r4.yyzw, r5.xxyz
  mul r5.xyz, v0.wwww, cb0[r4.x + 8].xyzx
  add r4.xyz, r4.yzwy, r5.xyzx
  mul r4.xyz, r3.wwww, r4.xyzx
  add r2.xyz, r2.xyzx, r4.xyzx

#line 12
  dp4 r3.w, v4.xyzw, icb[r2.w + 0].xyzw
  and r4.xyzw, v5.xyzw, icb[r2.w + 4].xyzw
  or r4.xy, r4.ywyy, r4.xzxx
  or r4.x, r4.y, r4.x
  imul null, r4.x, r4.x, l(4)
  mul r4.yzw, v1.xxxx, cb0[r4.x + 5].xxyz
  mul r5.xyz, v1.yyyy, cb0[r4.x + 6].xyzx
  add r4.yzw, r4.yyzw, r5.xxyz
  mul r5.xyz, v1.zzzz, cb0[r4.x + 7].xyzx
  add r4.yzw, r4.yyzw, r5.xxyz
  mul r5.xyz, r0.xxxx, cb0[r4.x + 8].xyzx
  add r4.xyz, r4.yzwy, r5.xyzx
  mul r4.xyz, r3.wwww, r4.xyzx
  add r3.xyz, r3.xyzx, r4.xyzx

#line 14
  iadd r2.w, r2.w, l(1)
endloop 

#line 15
mov r2.xyz, r2.xyzx  // r2.x <- vin.position.x; r2.y <- vin.position.y; r2.z <- vin.position.z
mov r0.x, l(1.000000)  // r0.x <- vin.position.w

#line 16
mov r3.xyz, r3.xyzx  // r3.x <- vin.normal.x; r3.y <- vin.normal.y; r3.z <- vin.normal.z

#line 19
mul r1.xyzw, cb0[0].xxxx, cb1[0].xyzw
mul r4.xyzw, cb0[0].yyyy, cb1[1].xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r4.xyzw, cb0[0].zzzz, cb1[2].xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r4.xyzw, cb0[0].wwww, cb1[3].xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r4.xyzw, cb0[1].xxxx, cb1[0].xyzw
mul r5.xyzw, cb0[1].yyyy, cb1[1].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[1].zzzz, cb1[2].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[1].wwww, cb1[3].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[2].xxxx, cb1[0].xyzw
mul r6.xyzw, cb0[2].yyyy, cb1[1].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[2].zzzz, cb1[2].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[2].wwww, cb1[3].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[3].xxxx, cb1[0].xyzw
mul r7.xyzw, cb0[3].yyyy, cb1[1].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb0[3].zzzz, cb1[2].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb0[3].wwww, cb1[3].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r1.xyzw, r1.xyzw, r2.xxxx
mul r4.xyzw, r2.yyyy, r4.xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r2.xyzw, r2.zzzz, r5.xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.xxxx, r6.xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.z <- vout.position.z; r0.w <- vout.position.w

#line 20
itof r1.x, l(0)  // r1.x <- vin.normal.w

#line 21
mul r2.xyzw, r3.xxxx, cb0[0].xyzw
mul r4.xyzw, r3.yyyy, cb0[1].xyzw
add r2.xyzw, r2.xyzw, r4.xyzw
mul r3.xyzw, r3.zzzz, cb0[2].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r1.xyzw, r1.xxxx, cb0[3].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
dp4 r2.x, r1.xyzw, r1.xyzw
rsq r2.x, r2.x
mul r1.xyzw, r1.xyzw, r2.xxxx  // r1.x <- vout.world_normal.x; r1.y <- vout.world_normal.y; r1.z <- vout.world_normal.z; r1.w <- vout.world_normal.w

#line 22
mov r2.xy, v3.xyxx  // r2.x <- vout.texcoord.x; r2.y <- vout.texcoord.y

#line 23
mov r3.xyz, cb0[4].xyzx  // r3.x <- vout.color.x; r3.y <- vout.color.y; r3.z <- vout.color.z

#line 24
mov r2.z, cb0[4].w  // r2.z <- vout.color.w

#line 26
mov o0.xyzw, r0.xyzw
mov o2.xyzw, r1.xyzw
mov o3.xyz, r3.xyzx
mov o3.w, r2.z
mov o1.xy, r2.xyxx
ret 
// Approximately 98 instruction slots used
