//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 material_color;             // Offset:   64 Size:    16
//   row_major float4x4 bone_transforms[256];// Offset:   80 Size: 16384
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64
//   float4 light_direction;            // Offset:   64 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// OBJECT_CONSTANT_BUFFER            cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
// WEIGHTS                  0   xyzw        4     NONE   float   xyzw
// BONES                    0   xyzw        5     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// BINORMAL                 0   xyz         4     NONE   float   xyz 
// COLOR                    0   xyzw        5     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { -1, 0, 0, 0},
                              { 0, -1, 0, 0},
                              { 0, 0, -1, 0},
                              { 0, 0, 0, -1} }
dcl_constantbuffer CB0[1029], dynamicIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; v0.w <- vin.position.w; 
//   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; v1.w <- vin.normal.w; 
//   v2.x <- vin.tangent.x; v2.y <- vin.tangent.y; v2.z <- vin.tangent.z; v2.w <- vin.tangent.w; 
//   v3.x <- vin.texcoord.x; v3.y <- vin.texcoord.y; 
//   v4.x <- vin.bone_weights.x; v4.y <- vin.bone_weights.y; v4.z <- vin.bone_weights.z; v4.w <- vin.bone_weights.w; 
//   v5.x <- vin.bone_indices.x; v5.y <- vin.bone_indices.y; v5.z <- vin.bone_indices.z; v5.w <- vin.bone_indices.w; 
//   o5.x <- <main return value>.color.x; o5.y <- <main return value>.color.y; o5.z <- <main return value>.color.z; o5.w <- <main return value>.color.w; 
//   o4.x <- <main return value>.binormal.x; o4.y <- <main return value>.binormal.y; o4.z <- <main return value>.binormal.z; 
//   o3.x <- <main return value>.tangent.x; o3.y <- <main return value>.tangent.y; o3.z <- <main return value>.tangent.z; o3.w <- <main return value>.tangent.w; 
//   o2.x <- <main return value>.world_normal.x; o2.y <- <main return value>.world_normal.y; o2.z <- <main return value>.world_normal.z; o2.w <- <main return value>.world_normal.w; 
//   o1.x <- <main return value>.texcoord.x; o1.y <- <main return value>.texcoord.y; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 4 "C:\Users\2230083\Desktop\個人制作\HLSL\SkinnedMeshVS.hlsl"
itof r0.x, l(0)  // r0.x <- vin.normal.w

#line 6
itof r0.yzw, l(0, 0, 0, 0)  // r0.y <- blended_position.x; r0.z <- blended_position.y; r0.w <- blended_position.z

#line 7
itof r1.xyz, l(0, 0, 0, 0)  // r1.x <- blended_normal.x; r1.y <- blended_normal.y; r1.z <- blended_normal.z

#line 9
mov r1.w, l(0)  // r1.w <- bone_index
mov r2.xyz, r0.yzwy  // r2.x <- blended_position.x; r2.y <- blended_position.y; r2.z <- blended_position.z
mov r3.xyz, r1.xyzx  // r3.x <- blended_normal.x; r3.y <- blended_normal.y; r3.z <- blended_normal.z
mov r2.w, r1.w  // r2.w <- bone_index
loop 
  ilt r4.x, r2.w, l(4)
  breakc_z r4.x

#line 11
  dp4 r4.x, v4.xyzw, icb[r2.w + 0].xyzw
  and r5.xyzw, v5.xyzw, icb[r2.w + 4].xyzw
  or r4.yz, r5.yywy, r5.xxzx
  or r4.y, r4.z, r4.y
  imul null, r4.y, r4.y, l(4)
  mul r5.xyz, v0.xxxx, cb0[r4.y + 5].xyzx
  mul r6.xyz, v0.yyyy, cb0[r4.y + 6].xyzx
  add r5.xyz, r5.xyzx, r6.xyzx
  mul r6.xyz, v0.zzzz, cb0[r4.y + 7].xyzx
  add r5.xyz, r5.xyzx, r6.xyzx
  mul r4.yzw, v0.wwww, cb0[r4.y + 8].xxyz
  add r4.yzw, r4.yyzw, r5.xxyz
  mul r4.xyz, r4.yzwy, r4.xxxx
  add r2.xyz, r2.xyzx, r4.xyzx

#line 13
  dp4 r4.x, v4.xyzw, icb[r2.w + 0].xyzw
  and r5.xyzw, v5.xyzw, icb[r2.w + 4].xyzw
  or r4.yz, r5.yywy, r5.xxzx
  or r4.y, r4.z, r4.y
  imul null, r4.y, r4.y, l(4)
  mul r5.xyz, v1.xxxx, cb0[r4.y + 5].xyzx
  mul r6.xyz, v1.yyyy, cb0[r4.y + 6].xyzx
  add r5.xyz, r5.xyzx, r6.xyzx
  mul r6.xyz, v1.zzzz, cb0[r4.y + 7].xyzx
  add r5.xyz, r5.xyzx, r6.xyzx
  mul r4.yzw, r0.xxxx, cb0[r4.y + 8].xxyz
  add r4.yzw, r4.yyzw, r5.xxyz
  mul r4.xyz, r4.yzwy, r4.xxxx
  add r3.xyz, r3.xyzx, r4.xyzx

#line 17
  iadd r2.w, r2.w, l(1)
endloop 

#line 18
mov r2.xyz, r2.xyzx  // r2.x <- vin.position.x; r2.y <- vin.position.y; r2.z <- vin.position.z
mov r0.x, l(1.000000)  // r0.x <- vin.position.w

#line 19
mov r3.w, l(0)
mov r3.xyzw, r3.xyzw  // r3.x <- vin.normal.x; r3.y <- vin.normal.y; r3.z <- vin.normal.z; r3.w <- vin.normal.w

#line 22
mul r1.xyzw, cb0[0].xxxx, cb1[0].xyzw
mul r4.xyzw, cb0[0].yyyy, cb1[1].xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r4.xyzw, cb0[0].zzzz, cb1[2].xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r4.xyzw, cb0[0].wwww, cb1[3].xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r4.xyzw, cb0[1].xxxx, cb1[0].xyzw
mul r5.xyzw, cb0[1].yyyy, cb1[1].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[1].zzzz, cb1[2].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[1].wwww, cb1[3].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[2].xxxx, cb1[0].xyzw
mul r6.xyzw, cb0[2].yyyy, cb1[1].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[2].zzzz, cb1[2].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[2].wwww, cb1[3].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[3].xxxx, cb1[0].xyzw
mul r7.xyzw, cb0[3].yyyy, cb1[1].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb0[3].zzzz, cb1[2].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb0[3].wwww, cb1[3].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r1.xyzw, r1.xyzw, r2.xxxx
mul r4.xyzw, r2.yyyy, r4.xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r2.xyzw, r2.zzzz, r5.xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.xxxx, r6.xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.z <- vout.position.z; r0.w <- vout.position.w

#line 23
mul r1.xyzw, r3.xxxx, cb0[0].xyzw
mul r2.xyzw, r3.yyyy, cb0[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r3.zzzz, cb0[2].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r3.wwww, cb0[3].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
dp4 r2.x, r1.xyzw, r1.xyzw
rsq r2.x, r2.x
mul r1.xyzw, r1.xyzw, r2.xxxx  // r1.x <- vout.world_normal.x; r1.y <- vout.world_normal.y; r1.z <- vout.world_normal.z; r1.w <- vout.world_normal.w

#line 24
mul r2.xyzw, v2.xxxx, cb0[0].xyzw
mul r3.xyzw, v2.yyyy, cb0[1].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, v2.zzzz, cb0[2].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
dp4 r3.x, r2.xyzw, r2.xyzw
rsq r3.x, r3.x
mul r2.xyzw, r2.xyzw, r3.xxxx  // r2.x <- vout.tangent.x; r2.y <- vout.tangent.y; r2.z <- vout.tangent.z; r2.w <- vout.tangent.w

#line 25
mul r3.xyz, r1.yzxy, v2.zxyz
mul r4.xyz, r1.zxyz, v2.yzxy
mov r4.xyz, -r4.xyzx
add r3.xyz, r3.xyzx, r4.xyzx
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r3.xyz, r3.wwww, r3.xyzx  // r3.x <- vout.binormal.x; r3.y <- vout.binormal.y; r3.z <- vout.binormal.z

#line 26
mov r4.xy, v3.xyxx  // r4.x <- vout.texcoord.x; r4.y <- vout.texcoord.y

#line 27
mov r5.xyz, cb0[4].xyzx  // r5.x <- vout.color.x; r5.y <- vout.color.y; r5.z <- vout.color.z

#line 28
mov r3.w, cb0[4].w  // r3.w <- vout.color.w

#line 30
mov o0.xyzw, r0.xyzw
mov o2.xyzw, r1.xyzw
mov o3.xyzw, r2.xyzw
mov o5.xyz, r5.xyzx
mov o5.w, r3.w
mov o4.xyz, r3.xyzx
mov o1.xy, r4.xyxx
ret 
// Approximately 115 instruction slots used
