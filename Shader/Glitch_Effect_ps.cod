//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer GLITCH_SHADER_CONSTANT_BUFFER
// {
//
//   float iTime;                       // Offset:    0 Size:     4
//   float density;                     // Offset:    4 Size:     4
//   float shift;                       // Offset:    8 Size:     4
//   float line_inpact;                 // Offset:   12 Size:     4 [unused]
//   float2 x_shift;                    // Offset:   16 Size:     8 [unused]
//   float2 y_shift;                    // Offset:   24 Size:     8 [unused]
//   float rand_float;                  // Offset:   32 Size:     4
//   float x_shifting;                  // Offset:   36 Size:     4
//   float y_shifting;                  // Offset:   40 Size:     4
//   float extension;                   // Offset:   44 Size:     4
//   float x_gage;                      // Offset:   48 Size:     4 [unused]
//   float uv_slider;                   // Offset:   52 Size:     4
//   float brightness;                  // Offset:   56 Size:     4
//   float glitch_mask_radius;          // Offset:   60 Size:     4
//   int glitch_sampling_count;         // Offset:   64 Size:     4 [unused]
//   float2 center;                     // Offset:   68 Size:     8
//   float gage;                        // Offset:   76 Size:     4 [unused]
//   float glitchRectWidth;             // Offset:   80 Size:     4
//   float glitchRectHeight;            // Offset:   84 Size:     4
//   float glitchRectStrength;          // Offset:   88 Size:     4
//   float flashFrequency;              // Offset:   92 Size:     4
//   float flashStrength;               // Offset:   96 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampl                             sampler      NA          NA             s0      1 
// image_map                         texture  float4          2d             t0      1 
// GLITCH_SHADER_CONSTANT_BUFFER     cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   v2.x <- pin.texcoord.x; v2.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 73 "C:\Users\2230083\Desktop\そこに愛E"
mov r0.x, cb0[0].x  // r0.x <- t

#line 76
nop 
mul r0.y, r0.x, cb0[0].y

#line 12
mul r0.y, r0.y, l(12.989800)
add r0.y, r0.y, l(78.233002)
sincos r0.y, null, r0.y
mul r0.y, r0.y, l(43758.546875)
frc r0.y, r0.y  // r0.y <- <hash1 return value>

#line 76
mov r0.y, r0.y  // r0.y <- s

#line 78
mov r0.zw, v2.xxxy  // r0.z <- uv.x; r0.w <- uv.y

#line 79
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v2.xyxx, t0.xyzw, s0  // r1.x <- source_color.x; r1.y <- source_color.y; r1.z <- source_color.z; r1.w <- source_color.w

#line 80
itof r2.x, l(0)
lt r2.x, r1.w, r2.x
if_nz r2.x

#line 81
  mov o0.xyzw, r1.xyzw
  ret 
endif 

#line 84
nop 
nop 
mov r0.zw, r0.zzzw
mul r2.x, r0.y, cb0[0].z

#line 23 "C:\Users\2230083\Desktop\そこに愛はあるんか\HLSL\math_utils.hlsli"
resinfo_indexable(texture2d)(float,float,float,float) r2.y, l(0), t0.xyzw
mov r2.y, r2.y  // r2.y <- scene_map_size.x

#line 24
mul r2.y, r0.z, r2.y
div r2.y, r2.y, l(2.000000)
frc r2.y, r2.y
mul r2.y, r2.y, l(4.000000)
mov r2.z, l(-1.000000)
add r2.y, r2.z, r2.y
mul r2.x, r2.y, r2.x
add r0.w, r0.w, r2.x

#line 25
mov r0.z, r0.z  // r0.z <- <interlaceY return value>.x
mov r0.w, r0.w  // r0.w <- <interlaceY return value>.y

#line 84 "C:\Users\2230083\Desktop\そこに愛Eあるんか\HLSL\Glitch_Effect_ps.hlsl"
mov r0.zw, r0.zzzw  // r0.w <- uv.y

#line 87
nop 
add r2.xy, r0.xxxx, r0.zwzz

#line 17
dp2 r2.x, r2.xyxx, l(127.099998, 311.700012, 0.000000, 0.000000)
sincos r2.x, null, r2.x
mul r2.x, r2.x, l(43758.546875)
frc r2.x, r2.x  // r2.x <- <hash2 return value>

#line 87
mul r2.x, r2.x, cb0[2].x
itof r2.y, l(0)
add r0.zw, r0.zzzw, r2.xxxy

#line 90
nop 
nop 
nop 
mov r0.zw, r0.zzzw
mul r2.x, r0.y, cb0[2].y
mov r2.y, cb0[2].z

#line 14 "C:\Users\2230083\Desktop\そこに愛はあるんか\HLSL\math_utils.hlsli"
mov r2.zw, -r2.xxxy
add r2.zw, r0.zzzw, r2.zzzw
sample_indexable(texture2d)(float,float,float,float) r3.x, r2.zwzz, t0.xyzw, s0
mov r3.x, r3.x  // r3.x <- color.x

#line 15
sample_indexable(texture2d)(float,float,float,float) r3.y, r0.zwzz, t0.xyzw, s0
mov r3.y, r3.y  // r3.y <- color.y

#line 16
add r2.xy, r0.zwzz, r2.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.z, r2.xyxx, t0.xyzw, s0
mov r3.z, r3.z  // r3.z <- color.z

#line 17
mov r3.x, r3.x  // r3.x <- <colorSplit return value>.x
mov r3.y, r3.y  // r3.y <- <colorSplit return value>.y
mov r3.z, r3.z  // r3.z <- <colorSplit return value>.z

#line 90 "C:\Users\2230083\Desktop\そこに愛Eあるんか\HLSL\Glitch_Effect_ps.hlsl"
mov r3.xyz, r3.xyzx  // r3.x <- color.x; r3.y <- color.y; r3.z <- color.z

#line 93
nop 
mul r0.x, r0.x, cb0[3].y
add r0.x, r0.x, cb0[2].w
mov r0.y, l(0)

#line 17
dp2 r0.x, r0.xyxx, l(127.099998, 311.700012, 0.000000, 0.000000)
sincos r0.x, null, r0.x
mul r0.x, r0.x, l(43758.546875)
frc r0.x, r0.x  // r0.x <- <hash2 return value>

#line 93
mov r2.xyz, -r3.xyzx
add r2.xyz, r0.xxxx, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[3].zzzz
add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- color.x; r2.y <- color.y; r2.z <- color.z

#line 96
nop 
mov r0.zw, r0.zzzw
mov r0.x, cb0[0].y

#line 40
nop 
mul r0.x, r0.x, cb0[0].x

#line 12
mul r0.x, r0.x, l(12.989800)
add r0.x, r0.x, l(78.233002)
sincos r0.x, null, r0.x
mul r0.x, r0.x, l(43758.546875)
frc r0.x, r0.x  // r0.x <- <hash1 return value>

#line 40
mov r0.x, r0.x  // r0.x <- noiseFactor

#line 43
div r3.xy, r0.zwzz, cb0[5].xyxx
round_ni r3.xy, r3.xyxx  // r3.x <- gridUV.x; r3.y <- gridUV.y

#line 46
nop 
dp2 r0.y, r3.xyxx, l(1.300000, 2.100000, 0.000000, 0.000000)

#line 12
mul r0.y, r0.y, l(12.989800)
add r0.y, r0.y, l(78.233002)
sincos r0.y, null, r0.y
mul r0.y, r0.y, l(43758.546875)
frc r4.x, r0.y  // r4.x <- <hash1 return value>

#line 46
nop 
dp2 r0.y, r3.xyxx, l(3.700000, 1.900000, 0.000000, 0.000000)

#line 12
mul r0.y, r0.y, l(12.989800)
add r0.y, r0.y, l(78.233002)
sincos r0.y, null, r0.y
mul r0.y, r0.y, l(43758.546875)
frc r4.y, r0.y  // r4.y <- <hash1 return value>

#line 46
mul r3.zw, r0.xxxx, r4.xxxy
mul r3.zw, r3.zzzw, cb0[5].zzzz  // r3.z <- offsetR.x; r3.w <- offsetR.y

#line 47
nop 
dp2 r0.y, r3.xyxx, l(5.100000, 4.300000, 0.000000, 0.000000)

#line 12
mul r0.y, r0.y, l(12.989800)
add r0.y, r0.y, l(78.233002)
sincos r0.y, null, r0.y
mul r0.y, r0.y, l(43758.546875)
frc r4.x, r0.y  // r4.x <- <hash1 return value>

#line 47
nop 
dp2 r0.y, r3.xyxx, l(2.900000, 6.500000, 0.000000, 0.000000)

#line 12
mul r0.y, r0.y, l(12.989800)
add r0.y, r0.y, l(78.233002)
sincos r0.y, null, r0.y
mul r0.y, r0.y, l(43758.546875)
frc r4.y, r0.y  // r4.y <- <hash1 return value>

#line 47
mul r4.xy, r0.xxxx, r4.xyxx
mul r4.xy, r4.xyxx, cb0[5].zzzz  // r4.x <- offsetG.x; r4.y <- offsetG.y

#line 48
nop 
dp2 r0.y, r3.xyxx, l(7.300000, 8.100000, 0.000000, 0.000000)

#line 12
mul r0.y, r0.y, l(12.989800)
add r0.y, r0.y, l(78.233002)
sincos r0.y, null, r0.y
mul r0.y, r0.y, l(43758.546875)
frc r5.x, r0.y  // r5.x <- <hash1 return value>

#line 48
nop 
dp2 r0.y, r3.xyxx, l(9.400000, 1.700000, 0.000000, 0.000000)

#line 12
mul r0.y, r0.y, l(12.989800)
add r0.y, r0.y, l(78.233002)
sincos r0.y, null, r0.y
mul r0.y, r0.y, l(43758.546875)
frc r5.y, r0.y  // r5.y <- <hash1 return value>

#line 48
mul r0.xy, r0.xxxx, r5.xyxx
mul r0.xy, r0.xyxx, cb0[5].zzzz  // r0.x <- offsetB.x; r0.y <- offsetB.y

#line 51
add r3.xy, r0.zwzz, r3.zwzz
sample_indexable(texture2d)(float,float,float,float) r3.x, r3.xyxx, t0.xyzw, s0
mov r3.x, r3.x  // r3.x <- r

#line 52
add r4.xy, r0.zwzz, r4.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.y, r4.xyxx, t0.xyzw, s0
mov r3.y, r3.y  // r3.y <- g

#line 53
add r0.xy, r0.xyxx, r0.zwzz
sample_indexable(texture2d)(float,float,float,float) r3.z, r0.xyxx, t0.xyzw, s0
mov r3.z, r3.z  // r3.z <- b

#line 55
mov r3.x, r3.x  // r3.x <- <ApplyRectangularNoiseColorShift return value>.x
mov r3.y, r3.y  // r3.y <- <ApplyRectangularNoiseColorShift return value>.y
mov r3.z, r3.z  // r3.z <- <ApplyRectangularNoiseColorShift return value>.z

#line 96
mov r3.xyz, r3.xyzx  // r3.x <- rectNoise.x; r3.y <- rectNoise.y; r3.z <- rectNoise.z

#line 97
add r0.xyz, r2.xyzx, r3.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 100
nop 
mov r0.xyz, r0.xyzx

#line 62
div r0.w, cb0[0].x, cb0[5].w
frc r0.w, r0.w  // r0.w <- flashPhase

#line 63
lt r0.w, r0.w, cb0[6].x
if_nz r0.w

#line 65
  mov r2.xyz, -r0.xyzx
  add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)

#line 66
endif   // r2.x <- <ApplyFlash return value>.x; r2.y <- <ApplyFlash return value>.y; r2.z <- <ApplyFlash return value>.z

#line 67
if_z r0.w
  mov r2.xyz, r0.xyzx
endif 

#line 100
mov r2.xyz, r2.xyzx  // r2.x <- color.x; r2.y <- color.y; r2.z <- color.z

#line 103
mov r0.xy, -cb0[4].yzyy
add r0.xy, r0.xyxx, v2.xyxx
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
div r0.x, r0.x, cb0[3].w
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(1.000000)  // r0.x <- mask

#line 104
mov r3.xyzw, -r1.xyzw
mov r2.w, r1.w
add r2.xyzw, r2.xyzw, r3.xyzw
mul r0.xyzw, r0.xxxx, r2.xyzw
add o0.xyzw, r0.xyzw, r1.xyzw  // o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
ret 
// Approximately 175 instruction slots used
