//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
// PARAMETER                0   xyzw        3     NONE   float   xyzw
// SV_VertexID              0   x           4   VERTID    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
// PARAMETER                0   xyzw        3     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_output o0.xyz
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; 
//   v1.x <- vin.size.x; v1.y <- vin.size.y; 
//   v2.x <- vin.color.x; v2.y <- vin.color.y; v2.z <- vin.color.z; v2.w <- vin.color.w; 
//   v3.x <- vin.param.x; v3.y <- vin.param.y; v3.z <- vin.param.z; v3.w <- vin.param.w; 
//   v4.x <- vid; 
//   o3.x <- <main return value>.param.x; o3.y <- <main return value>.param.y; o3.z <- <main return value>.param.z; o3.w <- <main return value>.param.w; 
//   o2.x <- <main return value>.color.x; o2.y <- <main return value>.color.y; o2.z <- <main return value>.color.z; o2.w <- <main return value>.color.w; 
//   o1.x <- <main return value>.size.x; o1.y <- <main return value>.size.y; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z
//
#line 6 "C:\Users\2230083\Desktop\そこに愛Eȁるんか\HLSL\geometry_particle_vs.hlsl"
mov r0.xyz, v0.xyzx  // r0.x <- output.position.x; r0.y <- output.position.y; r0.z <- output.position.z

#line 7
mov r1.xyzw, v2.xyzw  // r1.x <- output.color.x; r1.y <- output.color.y; r1.z <- output.color.z; r1.w <- output.color.w

#line 8
mov r2.xy, v1.xyxx  // r2.x <- output.size.x; r2.y <- output.size.y

#line 10
mov r3.xyzw, v3.xyzw  // r3.x <- output.param.x; r3.y <- output.param.y; r3.z <- output.param.z; r3.w <- output.param.w

#line 11
mov o2.xyzw, r1.xyzw
mov o3.xyzw, r3.xyzw
mov o0.xyz, r0.xyzx
mov o1.xy, r2.xyxx
ret 
// Approximately 9 instruction slots used
